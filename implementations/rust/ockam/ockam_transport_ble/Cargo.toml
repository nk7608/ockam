[package]
name = "ockam_transport_ble"
version = "0.1.0"
authors = ["Ockam Developers"]
edition = "2018"
license = "Apache-2.0"
homepage = "https://github.com/ockam-network/ockam"
repository = "https://github.com/ockam-network/ockam/tree/develop/implementations/rust/ockam/ockam_transport_ble"
readme = "README.md"
keywords = ["ockam", "crypto", "network", "bluetooth", "ble"]
categories = ["cryptography", "asynchronous", "authentication", "embedded", "network-programming"]
description = """
Bluetooth Low Energy (BLE) Transport for the Ockam Routing Protocol.
"""
exclude = [
    "DEVELOP.md",
    "LICENSE"
]
#autoexamples = false

# - features ------------------------------------------------------------------

[features]
default = ["std", "use_btleplug", "ockam/software_vault"]
#default = ["no_std", "alloc", "use_bluetooth_hci", "stm32f4"]

# Feature (enabled by default): "std" enables functionality expected to
# be available on a standard platform.
std = [
    "ockam/std",
    "ockam_core/std",
    "ockam_node/std",
    "ockam_transport_core/std",
    "tracing/default",
    "uuid",
]

# Feature: "no_std" enables functionality required for platforms
# without the standard library.
no_std = [
    "ockam/no_std",
    "ockam_core/no_std",
    "ockam_node/no_std",
    "ockam_transport_core/no_std",
    "heapless",
    "nb",
]

# Feature: "alloc" enables support for heap allocation on "no_std"
# platforms, requires nightly.
alloc = [
    "ockam/alloc",
    "ockam_core/alloc",
    "ockam_node/alloc",
    "ockam_transport_core/alloc",
]

# Feature: Bare-metal support for ST Micro BlueNRG-MS BLE radios (server-only)
use_bluetooth_hci = [ "no_std", "bluetooth-hci", "bluenrg" ]

# Feature: Multi-platform support for BLE radios (client-only)
use_btleplug = [ "btleplug" ]


# Architecture Features: - TODO move these into their own crates
cortexm = [
    "alloc-cortex-m",
    "cortex-m",
    "cortex-m-rt",
]

mips = [
    "alloc-pic32",
    "mips-rt",
]


# Target Features: - TODO move these into their own crates

qemu = [
    "no_std",
    "alloc",
    "cortexm",
    "panic-itm",
]

atsame54 = [
    "no_std",
    "alloc",
    "cortexm",
    "panic-semihosting",
    "cortex-m-semihosting",
    "atsame54_xpro",
    "embedded-hal", # TODO atsame54_xpro declares hal::hal as private
    "bluenrg",
]

stm32f4 = [
    "no_std",
    "alloc",
    "cortexm",
    "panic-itm",
    "stm32f4xx-hal",
    "bluenrg",
]

stm32h7 = [
    "no_std",
    "alloc",
    "cortexm",
    "panic-itm",
    "stm32h7xx-hal",
    "stm32-device-signature/stm32h75x",
    "bluenrg",
]

pic32 = [
    "no_std",
    "alloc",
    "mips",
    "panic-halt",
    "embedded-hal", # TODO pic32-hal declares hal::hal as private
    "pic32-hal",
]
pic32mx1xxfxxxb = ["pic32", "pic32-hal/pic32mx1xxfxxxb"]
pic32mx2xxfxxxb = ["pic32", "pic32-hal/pic32mx2xxfxxxb"]



# - dependencies --------------------------------------------------------------

[dependencies]
ockam = { path = "../ockam", default_features = false }
ockam_core = { path = "../ockam_core", version = "^0.43.1-dev", default_features = false }
ockam_node = { path = "../ockam_node", version = "^0.42.1-dev", default_features = false }
ockam_executor = { path = "../ockam_executor", version = "^0.12.1-dev", default_features = false }
ockam_transport_core = { path = "../ockam_transport_core", version = "^0.17.1-dev", default_features = false }

async-trait = "0.1.51" # TODO lose
futures = { version = "0.3.19", default-features = false }
futures-util = { version = "0.3.19", default-features = false, features = ["alloc", "async-await-macro", "sink"] }
serde = { version = "1.0", default-features = false, features = ["derive"] }
tracing = { version = "0.1", default_features = false }


# desktop
btleplug = { version = "0.9.0", optional = true }
#btleplug = { git = "https://github.com/deviceplug/btleplug.git", branch = "dev", optional = true }
uuid = { version = "0.8.2", optional = true }

# baremetal
#bluenrg = { version = "0.1.0", default-features = false, features = ["ms"], optional = true }
#bluenrg = { path = "../../Ockam.forks/bluenrg.git", features = ["ms"], optional = true }
bluenrg = { git = "https://github.com/antoinevg/bluenrg.git", rev = "c7117b9", features = ["ms"], optional = true }
bluetooth-hci = { version = "0.1.0", default-features = false, features = ["version-4-1"], optional = true }
nb = { version = "1.0.0", optional = true }
#heapless = { version = "0.7.7", optional = true } # TODO lose
heapless = { git = "https://github.com/japaric/heapless", branch = "slab", optional = true }

# cortex-m TODO - lose
alloc-cortex-m = { version = "0.4.1", optional = true } # TODO https://docs.rs/alloc-compose/0.5.0/alloc_compose/
cortex-m = { version = "0.7.3", optional = true }
cortex-m-rt = { version = "0.6.14", optional = true }
cortex-m-semihosting = { version = "0.3.7", optional = true }
panic-semihosting = { version = "0.5.6", optional = true }
panic-itm = { version = "0.4.2", optional = true }

# atsame TODO - lose
atsame54_xpro = { version = "0.2.0", optional = true }
embedded-hal = { version = "0.2.3", optional = true }

# stm32 TODO - lose
stm32-device-signature = { version = "0.3.3", optional = true }
stm32f4xx-hal = { version = "0.9.0", features = ["rt", "stm32f407"], optional = true }
#stm32h7xx-hal = { version = "0.9.0", features = ["rt", "stm32h750v", "revision_v"], optional = true }
stm32h7xx-hal = { version = "0.9.0", features = ["rt", "stm32h747cm7"], optional = true }

# mips & pic32 TODO - lose
alloc-pic32 = { git = "https://github.com/kiffie/alloc-pic32.git", optional = true }
mips-rt = { version = "0.2.0", optional = true }
panic-halt = { version = "0.2.0", optional = true }
pic32-config-sector = { version = "0.1.0", optional = true }
pic32-hal = { version = "0.4.0", optional = true }

# targets
#[target.'cfg(any(target_os = "linux", target_os = "macos", target_os = "windows"))'.dependencies]
#tokio = { version = "1.10.0", default_features = false, features = ["time"] }

#[target.'cfg(target_os = "linux")'.dependencies]
#[target.'cfg(any(target_os = "macos", target_os = "ios"))'.dependencies]
#[target.'cfg(target_os = "windows")'.dependencies]

[target.'cfg(target_arch = "arm")'.dependencies]
cortex-m = "0.7.3"

#[target.'cfg(target_arch = "mips")'.dependencies]

[target.'cfg(any(target_arch = "riscv32", target_arch = "riscv64"))'.dependencies]
riscv = "0.7.0"


[[example]]
name = "04-routing-over-ble-transport-initiator"
required-features = [ "std", "use_btleplug" ]

[[example]]
name = "05-secure-channel-over-ble-transport-initiator"
required-features = [ "std", "use_btleplug" ]
